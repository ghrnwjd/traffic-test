spring:
  application:
    name: traffic-test
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/traffic_test?serverTimezone=Asia/Seoul
    username: dsplab
    password: 1234

  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: update
      # none, create = ???? ???? ??????, update = ?? ???? ??
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        #PhysicalNamingStrategyStandardImpl = Entity ? ?? ? ??? ??? ???? ????.

      use-new-id-generator-mappings: false # jpa ? ????? ???? ???.
    show-sql: false # sql?? ???? ????.
    properties:
      hibernate.format_sql: true # ???? ???? ?????.

  kafka:
    consumer:
      bootstrap-servers: localhost:9092 # Kafka 클러스터에 대한 주소
      group-id: foo    # 컨슈머 그룹의 고유 식별자인 그룹 ID를 설정
      auto-offset-reset: earliest

      # Kafka 메시지의 key를 역직렬화할 때 사용할 클래스를 지정
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer

      # Kafka 메시지의 value를 역직렬화할 때 사용할 클래스를 지정
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer


  producer:
    # Kafka 클러스터에 대한 주소
    bootstrap-servers: localhost:9092

    # Kafka 메시지의 key를 직렬화할 때 사용할 클래스를 지정
    key-serializer: org.apache.kafka.common.serialization.StringSerializer

    # Kafka 메시지의 value를 직렬화할 때 사용할 클래스를 지정
    value-serializer: org.apache.kafka.common.serialization.StringSerializer
